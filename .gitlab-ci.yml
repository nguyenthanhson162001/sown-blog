include:
- project: 'gns-kubernetes/ci-files/templates'
  ref: 'v0.6'
  file: '.ci-docker-build-makisu.yml'

stages:
  - build
  - test
  - deploy

variables:
  APP_LABEL: nguyen-thanh-son
  APP_PORT: 3000
  KUBE_DOMAIN: k01.gameloft.org
  HELMFILE_DIR: ${CI_PROJECT_DIR}/k8s/deployment/helm
  IMAGE_NAME: ${APP_LABEL}
  DOCKERFILE_PATH: ./Dockerfile

docker:build:
  extends: .docker:build:template
  variables:
    IMAGE_NAME: ${APP_LABEL}
  only:
    refs:
    - staging
    - master
    - test

.kube:base_template: &kube_base
  image: docker-registry.gameloft.org/gns-kubernetes/docker-kubectl:helm-3-0-0
  before_script:
    - export GITLAB_PULL_SECRET=gitlab-pull-secret-${APP_LABEL}
    - kubectl version || true
    - helm version || true
    - helmfile --version
    - cd ${HELMFILE_DIR}
    - if [ ! -z $GITLAB_PULL_SECRET ]; then
        kubectl get secret ${GITLAB_PULL_SECRET} || kubectl create secret docker-registry ${GITLAB_PULL_SECRET} --docker-password="${CI_DEPLOY_PASSWORD}" --docker-username="${CI_DEPLOY_USER}" --docker-server="${CI_REGISTRY}";
      fi

.deploy:kube:template: &deploy_kube
  extends: .kube:base_template
  stage: deploy
  script:
    - export HELM_RELEASE=${CI_PROJECT_NAME}-${CI_ENVIRONMENT_SLUG}
    - export DOCKER_IMAGE_TAG=${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}
    - echo "Deploying ${HELM_RELEASE}, env ${CI_ENVIRONMENT_SLUG}, Kubernetes namespace ${KUBE_NAMESPACE}, Docker Image Tag ${DOCKER_IMAGE_TAG}"
    - helmfile --environment=${HELMFILE_ENV} apply

deploy:kube:test:
  extends: .deploy:kube:template
  variables:
    HELMFILE_ENV: test
    INGRESS_HOST: test-${APP_LABEL}.gwmt-staging.k01.gameloft.org
  environment:
    name: staging
    url: http://${INGRESS_HOST}
    on_stop: deploy:kube:stop
  when: on_success
  only:
    refs:
      - test

deploy:kube:staging:
  extends: .deploy:kube:template
  variables:
    HELMFILE_ENV: staging
    INGRESS_HOST: ${APP_LABEL}.gwmt-staging.k01.gameloft.org
  environment:
    name: staging
    url: http://${INGRESS_HOST}
    on_stop: deploy:kube:stop
  when: on_success
  only:
    refs:
      - staging

deploy:kube:production:
  extends: .deploy:kube:template
  variables:
    HELMFILE_ENV: production
    INGRESS_HOST: ${APP_LABEL}.gameloft.com
  environment:
    name: production
    url: https://${INGRESS_HOST}
  when: on_success
  only:
    refs:
      - master

deploy:kube:stop:
  extends: .kube:base_template
  stage: deploy
  variables:
    HELMFILE_ENV: staging
  script:
    - helmfile --environment=${HELMFILE_ENV} delete --purge
  environment:
    name: staging
    action: stop
  when: manual
  only:
    refs:
      - staging
    kubernetes: active
